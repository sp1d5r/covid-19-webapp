{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/almazahmad/WebstormProjects/covid-webapp/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport ReactMapGL from 'react-map-gl';\nimport SearchBox from \"@seanhouli/react-mapbox-search\";\nimport Geocoder from 'react-mapbox-gl-geocoder'; // \n\nconst params = {\n  country: \"ca\"\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelected = (viewport, item) => {\n      this.setState({\n        viewport\n      });\n    };\n\n    this.state = {\n      information: {},\n      viewport: {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        latitude: 37.7577,\n        longitude: -122.4376,\n        zoom: 8\n      }\n    };\n  }\n\n  componentWillMount() {\n    fetch('/yesterday/uk').then(res => res.json()).then(data => {\n      this.setState({\n        information: data[0]\n      });\n      console.log(this.state.information);\n    });\n  }\n\n  render() {\n    const {\n      viewport\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(ReactMapGL, {\n          style: {\n            position: \"fixed\",\n            width: window.innerWidth,\n            height: window.innerHeight,\n            backgroundSize: \"cover\",\n            zIndex: -1\n          },\n          width: viewport.width,\n          height: viewport.height,\n          latitude: viewport.latitude,\n          longitude: viewport.longitude,\n          zoom: viewport.zoom,\n          mapStyle: \"mapbox://styles/elijahahmad/ckggklsqg3atg1aokg07dhotu\",\n          onViewportChange: viewport => this.setState({\n            viewport\n          }),\n          mapboxApiAccessToken: MAPBOX_TOKEN,\n          children: [/*#__PURE__*/_jsxDEV(Geocoder, {\n            mapboxApiAccessToken: MAPBOX_TOKEN,\n            onSelected: this.onSelected,\n            viewport: viewport,\n            hideOnSelect: true,\n            value: \"\",\n            queryParams: params\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"The Current Information for UK - \", this.state.information[\"Date\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Active Cases: \", this.state.information[\"Active\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Confirmed Cases: \", this.state.information[\"Confirmed\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Current Deaths: \", this.state.information[\"Deaths\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/almazahmad/WebstormProjects/covid-webapp/src/App.js"],"names":["React","Component","BrowserRouter","Switch","Route","ReactMapGL","SearchBox","Geocoder","params","country","App","constructor","props","onSelected","viewport","item","setState","state","information","width","window","innerWidth","height","innerHeight","latitude","longitude","zoom","componentWillMount","fetch","then","res","json","data","console","log","render","position","backgroundSize","zIndex","MAPBOX_TOKEN"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\nimport ReactMapGL from 'react-map-gl';\nimport SearchBox from \"@seanhouli/react-mapbox-search\";\nimport Geocoder from 'react-mapbox-gl-geocoder';\n\n// \n\nconst params = {\n    country: \"ca\"\n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            information: {},\n            viewport: {\n                width: window.innerWidth,\n                height: window.innerHeight,\n                latitude: 37.7577,\n                longitude: -122.4376,\n                zoom: 8\n            }\n        }\n    }\n\n    componentWillMount() {\n        fetch('/yesterday/uk').then(res => res.json()).then(data => {\n            this.setState({information: data[0]});\n            console.log(this.state.information);\n        });\n    }\n\n    onSelected = (viewport, item) => {\n        this.setState({\n            viewport\n        })\n    }\n\n    render() {\n        const { viewport } = this.state;\n        return (\n            <div className=\"App\">\n                <header >\n                    <ReactMapGL\n                        style={{\n                            position: \"fixed\",\n                            width: window.innerWidth,\n                            height: window.innerHeight,\n                            backgroundSize: \"cover\",\n                            zIndex: -1,\n                        }}\n                        width={viewport.width}\n                        height={viewport.height}\n                        latitude={viewport.latitude}\n                        longitude={viewport.longitude}\n                        zoom={viewport.zoom}\n                        mapStyle=\"mapbox://styles/elijahahmad/ckggklsqg3atg1aokg07dhotu\"\n                        onViewportChange={(viewport) => this.setState({viewport})}\n                        mapboxApiAccessToken={MAPBOX_TOKEN}\n                    >\n                        <Geocoder\n                            mapboxApiAccessToken={MAPBOX_TOKEN}\n                            onSelected={this.onSelected}\n                            viewport={viewport}\n                            hideOnSelect={true}\n                            value=\"\"\n                            queryParams={params}\n                        />\n\n                        <p>The Current Information for UK - {this.state.information[\"Date\"]}</p>\n                        <p>Active Cases: {this.state.information[\"Active\"]}</p>\n                        <p>Confirmed Cases: {this.state.information[\"Confirmed\"]}</p>\n                        <p>Current Deaths: {this.state.information[\"Deaths\"]}</p>\n\n                    </ReactMapGL>\n                </header>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}