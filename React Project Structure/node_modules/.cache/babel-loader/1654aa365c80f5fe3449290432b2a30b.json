{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/almazahmad/WebstormProjects/covid-webapp/src/App.js\";\nimport React, { Component, useState } from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport ReactMapGL from 'react-map-gl';\nimport SearchBox from \"@seanhouli/react-mapbox-search\";\nimport Geocoder from 'react-mapbox-gl-geocoder';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Dropdown, FormControl, ListGroup } from \"react-bootstrap\";\nconst MAPBOX_TOKEN = \"pk.eyJ1IjoiZWxpamFoYWhtYWQiLCJhIjoiY2tnZ2tqdDkyMDI5bDMwcGdhcDAxNXFyNiJ9.3sIoybXDm1A_gILEb1b9CA\";\nconst params = {\n  country: \"ca\"\n};\n\nclass App extends Component {\n  constructor(props) {\n    var _s = $RefreshSig$();\n\n    super(props);\n\n    this.onSelected = (viewport, item) => {\n      this.setState({\n        viewport\n      });\n    };\n\n    this.CustomToggle = /*#__PURE__*/React.forwardRef(({\n      children,\n      onClick\n    }, ref) => /*#__PURE__*/_jsxDEV(\"a\", {\n      style: {\n        color: \"inherit\",\n        textDecoration: 'none'\n      },\n      href: \"\",\n      ref: ref,\n      onClick: e => {\n        e.preventDefault();\n        onClick(e);\n      },\n      children: [children + \" \", \"\\u25BC\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this));\n    this.CustomMenu = /*#__PURE__*/React.forwardRef(_s(({\n      children,\n      style,\n      className,\n      'aria-labelledby': labeledBy\n    }, ref) => {\n      _s();\n\n      const [value, setValue] = useState('');\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: ref,\n        style: style,\n        className: className,\n        \"aria-labelledby\": labeledBy,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          autoFocus: true,\n          className: \"mx-3 my-2 w-auto\",\n          placeholder: \"Type to filter...\",\n          onChange: e => setValue(e.target.value),\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-unstyled\",\n          children: React.Children.toArray(children).filter(child => !value || child.props.children.toLowerCase().startsWith(value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this);\n    }, \"A2PXPeq8TepW328gUMM4+o8Xryo=\"));\n    this.state = {\n      information: {},\n      viewport: {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        latitude: 37.7577,\n        longitude: -122.4376,\n        zoom: 8\n      },\n      country: \"United Kingdom\",\n      value: '',\n      listOfCountries: {}\n    };\n  }\n\n  componentWillMount() {\n    fetch('/yesterday/uk').then(res => res.json()).then(data => {\n      this.setState({\n        information: data[1]\n      });\n      console.log(data);\n    });\n    fetch('/get_country_list').then(res => res.json()).then(data => {\n      this.setState({\n        listOfCountries: data\n      });\n      console.log(this.state.listOfCountries);\n    });\n  }\n\n  render() {\n    this.items = this.state.listOfCountries.map(item => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n      eventKey: \"1\",\n      active: item === this.state.country,\n      children: \"item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this));\n    const {\n      viewport\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(ListGroup, {\n        variant: \"flush\",\n        children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [\"Current Information -\", /*#__PURE__*/_jsxDEV(Dropdown, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n              as: this.CustomToggle,\n              id: \"dropdown-custom-components\",\n              children: this.state.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n              as: this.CustomMenu,\n              children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                eventKey: \"2\",\n                children: \"Blue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                eventKey: \"1\",\n                children: \"Red-Orange\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Active Cases: \", this.state.information[\"Active\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Confirmed Cases: \", this.state.information[\"Confirmed\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Current Deaths: \", this.state.information[\"Deaths\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/almazahmad/WebstormProjects/covid-webapp/src/App.js"],"names":["React","Component","useState","BrowserRouter","Switch","Route","ReactMapGL","SearchBox","Geocoder","Dropdown","FormControl","ListGroup","MAPBOX_TOKEN","params","country","App","constructor","props","onSelected","viewport","item","setState","CustomToggle","forwardRef","children","onClick","ref","color","textDecoration","e","preventDefault","CustomMenu","style","className","labeledBy","value","setValue","target","Children","toArray","filter","child","toLowerCase","startsWith","state","information","width","window","innerWidth","height","innerHeight","latitude","longitude","zoom","listOfCountries","componentWillMount","fetch","then","res","json","data","console","log","render","items","map"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport './App.css';\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\nimport ReactMapGL from 'react-map-gl';\nimport SearchBox from \"@seanhouli/react-mapbox-search\";\nimport Geocoder from 'react-mapbox-gl-geocoder';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport {Dropdown, FormControl, ListGroup,} from \"react-bootstrap\";\n\nconst MAPBOX_TOKEN = \"pk.eyJ1IjoiZWxpamFoYWhtYWQiLCJhIjoiY2tnZ2tqdDkyMDI5bDMwcGdhcDAxNXFyNiJ9.3sIoybXDm1A_gILEb1b9CA\";\n\nconst params = {\n    country: \"ca\"\n}\n\n\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            information: {},\n            viewport: {\n                width: window.innerWidth,\n                height: window.innerHeight,\n                latitude: 37.7577,\n                longitude: -122.4376,\n                zoom: 8\n            },\n            country: \"United Kingdom\",\n            value: '',\n            listOfCountries: {}\n        }\n    }\n\n    componentWillMount() {\n        fetch('/yesterday/uk').then(res => res.json()).then(data => {\n            this.setState({information: data[1]});\n            console.log(data);\n        });\n        fetch('/get_country_list').then(res => res.json()).then(data =>{\n            this.setState({listOfCountries: data})\n            console.log(this.state.listOfCountries);\n        })\n    }\n\n    onSelected = (viewport, item) => {\n        this.setState({\n            viewport\n        })\n    }\n\n    /*\n    <ReactMapGL\n                        style={{\n                            position: \"fixed\",\n                            width: window.innerWidth,\n                            height: window.innerHeight,\n                            backgroundSize: \"cover\",\n                            zIndex: -1,\n                        }}\n                        width={viewport.width}\n                        height={viewport.height}\n                        latitude={viewport.latitude}\n                        longitude={viewport.longitude}\n                        zoom={viewport.zoom}\n                        mapStyle=\"mapbox://styles/elijahahmad/ckggklsqg3atg1aokg07dhotu\"\n                        onViewportChange={(viewport) => this.setState({viewport})}\n                        mapboxApiAccessToken={MAPBOX_TOKEN}\n                    >\n                        <Geocoder\n                            mapboxApiAccessToken={MAPBOX_TOKEN}\n                            onSelected={this.onSelected}\n                            viewport={viewport}\n                            hideOnSelect={true}\n                            value=\"\"\n                            queryParams={params}\n                        />\n\n                        <p>The Current Information for UK - {this.state.information[\"Date\"]}</p>\n                        <p>Active Cases: {this.state.information[\"Active\"]}</p>\n                        <p>Confirmed Cases: {this.state.information[\"Confirmed\"]}</p>\n                        <p>Current Deaths: {this.state.information[\"Deaths\"]}</p>\n\n                    </ReactMapGL>\n     */\n\n    CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n        <a\n            style={{color: \"inherit\", textDecoration: 'none'}}\n            href=\"\"\n            ref={ref}\n            onClick={(e) => {\n                e.preventDefault();\n                onClick(e);\n            }}\n        >\n            {children+\" \"}\n            &#x25bc;\n        </a>\n    ));\n\n// forwardRef again here!\n// Dropdown needs access to the DOM of the Menu to measure it\n    CustomMenu = React.forwardRef(\n        ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\n            const [value, setValue] = useState('');\n\n            return (\n                <div\n                    ref={ref}\n                    style={style}\n                    className={className}\n                    aria-labelledby={labeledBy}\n                >\n                    <FormControl\n                        autoFocus\n                        className=\"mx-3 my-2 w-auto\"\n                        placeholder=\"Type to filter...\"\n                        onChange={(e) => setValue(e.target.value)}\n                        value={value}\n                    />\n                    <ul className=\"list-unstyled\">\n                        {React.Children.toArray(children).filter(\n                            (child) =>\n                                !value || child.props.children.toLowerCase().startsWith(value),\n                        )}\n                    </ul>\n                </div>\n            );\n        },\n    );\n\n    render() {\n        this.items = this.state.listOfCountries.map((item) =>\n            <Dropdown.Item eventKey=\"1\" active={item===this.state.country}>item</Dropdown.Item>\n        );\n\n        const { viewport } = this.state;\n        return (\n            <div className=\"App\">\n\n                <ListGroup variant=\"flush\">\n                    <ListGroup.Item>Current Information -\n                        <Dropdown>\n                            <Dropdown.Toggle as={this.CustomToggle} id=\"dropdown-custom-components\">\n                                {this.state.country}\n                            </Dropdown.Toggle>\n\n                            <Dropdown.Menu as={this.CustomMenu}>\n\n                                <Dropdown.Item eventKey=\"2\">Blue</Dropdown.Item>\n                                <Dropdown.Item eventKey=\"1\">Red-Orange</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <p>Active Cases: {this.state.information[\"Active\"]}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <p>Confirmed Cases: {this.state.information[\"Confirmed\"]}</p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <p>Current Deaths: {this.state.information[\"Deaths\"]}</p>\n                    </ListGroup.Item>\n                </ListGroup>\n\n\n\n\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}