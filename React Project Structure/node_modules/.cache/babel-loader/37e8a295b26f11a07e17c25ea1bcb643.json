{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/almazahmad/WebstormProjects/covid-webapp/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport ReactMapGL from 'react-map-gl';\nimport SearchBox from \"@seanhouli/react-mapbox-search\";\nimport Geocoder from 'react-mapbox-gl-geocoder';\nconst MAPBOX_TOKEN = \"pk.eyJ1IjoiZWxpamFoYWhtYWQiLCJhIjoiY2tnZ2tqdDkyMDI5bDMwcGdhcDAxNXFyNiJ9.3sIoybXDm1A_gILEb1b9CA\";\nconst params = {\n  country: \"ca\"\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelected = (viewport, item) => {\n      this.setState({\n        viewport\n      });\n    };\n\n    this.state = {\n      information: {},\n      viewport: {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        latitude: 37.7577,\n        longitude: -122.4376,\n        zoom: 8\n      }\n    };\n  }\n\n  componentWillMount() {\n    fetch('/yesterday/uk').then(res => res.json()).then(data => {\n      this.setState({\n        information: data[0]\n      });\n      console.log(this.state.information);\n    });\n  }\n\n  /*\n  <ReactMapGL\n                      style={{\n                          position: \"fixed\",\n                          width: window.innerWidth,\n                          height: window.innerHeight,\n                          backgroundSize: \"cover\",\n                          zIndex: -1,\n                      }}\n                      width={viewport.width}\n                      height={viewport.height}\n                      latitude={viewport.latitude}\n                      longitude={viewport.longitude}\n                      zoom={viewport.zoom}\n                      mapStyle=\"mapbox://styles/elijahahmad/ckggklsqg3atg1aokg07dhotu\"\n                      onViewportChange={(viewport) => this.setState({viewport})}\n                      mapboxApiAccessToken={MAPBOX_TOKEN}\n                  >\n                      <Geocoder\n                          mapboxApiAccessToken={MAPBOX_TOKEN}\n                          onSelected={this.onSelected}\n                          viewport={viewport}\n                          hideOnSelect={true}\n                          value=\"\"\n                          queryParams={params}\n                      />\n                       <p>The Current Information for UK - {this.state.information[\"Date\"]}</p>\n                      <p>Active Cases: {this.state.information[\"Active\"]}</p>\n                      <p>Confirmed Cases: {this.state.information[\"Confirmed\"]}</p>\n                      <p>Current Deaths: {this.state.information[\"Deaths\"]}</p>\n                   </ReactMapGL>\n   */\n  render() {\n    const CustomToggle = /*#__PURE__*/React.forwardRef(({\n      children,\n      onClick\n    }, ref) => /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"\",\n      ref: ref,\n      onClick: e => {\n        e.preventDefault();\n        onClick(e);\n      },\n      children: [children, \"\\u25BC\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this));\n    const {\n      viewport\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"The Current Information for UK - \", this.state.information[\"Date\"]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Active Cases: \", this.state.information[\"Active\"]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Confirmed Cases: \", this.state.information[\"Confirmed\"]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Deaths: \", this.state.information[\"Deaths\"]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: ref,\n        style: style,\n        className: className,\n        \"aria-labelledby\": labeledBy,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          autoFocus: true,\n          className: \"mx-3 my-2 w-auto\",\n          placeholder: \"Type to filter...\",\n          onChange: e => setValue(e.target.value),\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-unstyled\",\n          children: React.Children.toArray(children).filter(child => !value || child.props.children.toLowerCase().startsWith(value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/almazahmad/WebstormProjects/covid-webapp/src/App.js"],"names":["React","Component","BrowserRouter","Switch","Route","ReactMapGL","SearchBox","Geocoder","MAPBOX_TOKEN","params","country","App","constructor","props","onSelected","viewport","item","setState","state","information","width","window","innerWidth","height","innerHeight","latitude","longitude","zoom","componentWillMount","fetch","then","res","json","data","console","log","render","CustomToggle","forwardRef","children","onClick","ref","e","preventDefault","style","className","labeledBy","setValue","target","value","Children","toArray","filter","child","toLowerCase","startsWith"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\nimport ReactMapGL from 'react-map-gl';\nimport SearchBox from \"@seanhouli/react-mapbox-search\";\nimport Geocoder from 'react-mapbox-gl-geocoder';\n\nconst MAPBOX_TOKEN = \"pk.eyJ1IjoiZWxpamFoYWhtYWQiLCJhIjoiY2tnZ2tqdDkyMDI5bDMwcGdhcDAxNXFyNiJ9.3sIoybXDm1A_gILEb1b9CA\";\n\nconst params = {\n    country: \"ca\"\n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            information: {},\n            viewport: {\n                width: window.innerWidth,\n                height: window.innerHeight,\n                latitude: 37.7577,\n                longitude: -122.4376,\n                zoom: 8\n            }\n        }\n    }\n\n    componentWillMount() {\n        fetch('/yesterday/uk').then(res => res.json()).then(data => {\n            this.setState({information: data[0]});\n            console.log(this.state.information);\n        });\n    }\n\n    onSelected = (viewport, item) => {\n        this.setState({\n            viewport\n        })\n    }\n\n    \n    /*\n    <ReactMapGL\n                        style={{\n                            position: \"fixed\",\n                            width: window.innerWidth,\n                            height: window.innerHeight,\n                            backgroundSize: \"cover\",\n                            zIndex: -1,\n                        }}\n                        width={viewport.width}\n                        height={viewport.height}\n                        latitude={viewport.latitude}\n                        longitude={viewport.longitude}\n                        zoom={viewport.zoom}\n                        mapStyle=\"mapbox://styles/elijahahmad/ckggklsqg3atg1aokg07dhotu\"\n                        onViewportChange={(viewport) => this.setState({viewport})}\n                        mapboxApiAccessToken={MAPBOX_TOKEN}\n                    >\n                        <Geocoder\n                            mapboxApiAccessToken={MAPBOX_TOKEN}\n                            onSelected={this.onSelected}\n                            viewport={viewport}\n                            hideOnSelect={true}\n                            value=\"\"\n                            queryParams={params}\n                        />\n\n                        <p>The Current Information for UK - {this.state.information[\"Date\"]}</p>\n                        <p>Active Cases: {this.state.information[\"Active\"]}</p>\n                        <p>Confirmed Cases: {this.state.information[\"Confirmed\"]}</p>\n                        <p>Current Deaths: {this.state.information[\"Deaths\"]}</p>\n\n                    </ReactMapGL>\n     */\n\n    render() {\n\n        const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n            <a\n                href=\"\"\n                ref={ref}\n                onClick={(e) => {\n                    e.preventDefault();\n                    onClick(e);\n                }}\n            >\n                {children}\n                &#x25bc;\n            </a>\n        ));\n\n        const { viewport } = this.state;\n        return (\n            <div className=\"App\">\n                <p>The Current Information for UK - {this.state.information[\"Date\"]}</p>\n                <p>Active Cases: {this.state.information[\"Active\"]}</p>\n                <p>Confirmed Cases: {this.state.information[\"Confirmed\"]}</p>\n                <p>Current Deaths: {this.state.information[\"Deaths\"]}</p>\n\n                <div\n                    ref={ref}\n                    style={style}\n                    className={className}\n                    aria-labelledby={labeledBy}\n                >\n                    <FormControl\n                        autoFocus\n                        className=\"mx-3 my-2 w-auto\"\n                        placeholder=\"Type to filter...\"\n                        onChange={(e) => setValue(e.target.value)}\n                        value={value}\n                    />\n                    <ul className=\"list-unstyled\">\n                        {React.Children.toArray(children).filter(\n                            (child) =>\n                                !value || child.props.children.toLowerCase().startsWith(value),\n                        )}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}